apiVersion: apps/v1
kind: Deployment
metadata:
  name: tercen-deployment
  namespace: default
  labels:
    app: tercen
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app: tercen
  template:
    metadata:
      labels:
        app: tercen
    spec:
      serviceAccountName: create-job
      restartPolicy: Always
      containers:
        - name: tercen-pod
          image: tercen/tercen:0.16.10
          imagePullPolicy: Always
          resources:
            requests:
              cpu: "1"
          env:
            - name: tercen.worker.runtime.ip
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
          ports:
            - containerPort: 5400
              name: tercen
            - containerPort: 50051
              name: tercen-grpc
          volumeMounts:
#            - name: docker-config
#              mountPath: /root/.docker/
#              readOnly: true
            - name: tercen-config
              mountPath: /etc/tercen
            - name: var-lib-tercen-data
              mountPath: /var/lib/tercen/data/
              readOnly: false
            - name: tercen-tmp
              mountPath: /tmp
              readOnly: false
            - name: var-run
              mountPath: /var/run
        - name: sarno-prod
          image: tercen/sarno:0.4.3
          imagePullPolicy: Always
          command: [ "sarno" ]
          resources:
            requests:
              cpu: "0.2"
          env:
            - name: TERCEN_PASSWORD
              value: "admin"
          volumeMounts:
            - name: var-lib-tercen-data
              mountPath: /var/lib/tercen/data/
              readOnly: false
            - name: tercen-tmp
              mountPath: /tmp
              readOnly: false
        - name: runtime-docker
          image: docker:20.10.9-dind-alpine3.14
          imagePullPolicy: Always
          resources:
            requests:
              cpu: "0.1"
          securityContext:
            privileged: true
          volumeMounts:
            - name: var-run
              mountPath: /var/run
              readOnly: false
            - name: var-lib-docker
              mountPath: /var/lib/docker
              readOnly: false
            - name: tercen-tmp
              mountPath: /tmp
            - name: var-lib-tercen-data
              mountPath: /var/lib/tercen/data/
              readOnly: false
      volumes:
#        - name: docker-config
#          configMap:
#            name: docker-config
        - name: tercen-config
          configMap:
            name: tercen-config
        - name: var-run
          emptyDir: {}
        - name: var-lib-docker
          persistentVolumeClaim:
            claimName: dind-pvc
        - name: tercen-tmp
          emptyDir: {}
        - name: var-lib-tercen-data
          persistentVolumeClaim:
            claimName: tercen-pvc

