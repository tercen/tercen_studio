# ALL 0 # OFF 2000 # FINEST 300 # FINER 400 # FINE 500 # CONFIG 700 # INFO 800 # WARNING 900 # SEVERE 1000 # SHOUT 1200
# tercen.log.level: '400'

tercen.log.level: '700'
tercen.auth.cookie.domain: mycompany.com

tercen.test.password: xxxx
tercen.admin.password: xxxx
tercen.worker.password: xxxx

tercen.auth.client.id.google: 'xxxxxxx.apps.googleusercontent.com'
tercen.auth.client.secret.google: 'xxxxxxx'
tercen.github.token: xxxxxxx

tercen.smtp.username: xxx@mycompany.com
tercen.smtp.password: xxxxx

tercen.couchdb.address: couchdb
tercen.couchdb.user: admin
tercen.couchdb.password: admin

tercen.client.uri: http://tercen:5400
#tercen.public.uri: http://172.17.0.1:5402
#tercen.public.client.uri: http://172.17.0.1:5402
tercen.worker.public.ip: 172.17.0.1
tercen.worker.ip: tercen
tercen.worker.webapp.ip: runtime
tercen.public.uri: https://mycompany.com
tercen.public.client.uri: https://mycompany.com





tercen.ws.compression: "on"


# default true, accept any imag
#tercen.allow.untrusted.docker: 'false'

# accept any image name starting by tercen or my-trusted-docker-repo, ex. my-trusted-docker-repo/my-docker-image
#tercen.trusted.docker:
#  - 'tercen'
#  - 'my-trusted-docker-repo'

#tercen.r.operator.reinstall: 'true'

# will use all available cpu and memory
tercen.worker.proc.override: 'true'
tercen.worker.proc.override.isolates.cpu.ratio: '1.0'

# manually set available worker threads and memory
#tercen.worker.isolates: '4'
# set 7G of available memory
#tercen.worker.memory: '7096000000'

DefaultProfiles:
- 2.api.profile
- 2.table.profile
- 2.cpuTime.profile
- 2.storage.profile
- 2.run.profile

# LDAP
#tercen.user.sign.up: 'false'
#tercen.user.service: 'ldap'
#tercen.user.service.ldap.host: '127.0.0.1'
#tercen.user.service.ldap.protocol: ''
#tercen.user.service.ldap.port: '389'
## TLS
## tercen.user.service.ldap.protocol: 'ssl'
## tercen.user.service.ldap.port: '636'
#
#tercen.user.service.ldap.bind: 'dc=example,dc=org'